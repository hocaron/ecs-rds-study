version: 0.2
phases:
  # 설치 중에 CodeBuild가 실행하는 명령을 나타냅니다. 빌드 환경에서 패키지를 설치하는 경우에만 install 단계를 사용하는 것이 좋습니다. 예를 들어, Mocha나 RSpec 같은 코드 테스팅 프레임워크를 설치하기 위해 이 단계를 사용할 수 있습니다.
  pre_build:
    commands:
      - "echo Logging in to Docker Hub..."
      - 'docker login --username="ssunnu" --password="testtesttest"'
  # 빌드 중에 CodeBuild가 실행하는 명령을 나타냅니다. 예를 들어, Mocha, RSpec 또는 sbt를 실행하기 위해 이 단계를 사용할 수 있습니다.
  build:
    commands:
      - "echo Build started on `date`"
      - "echo Building the Docker image..."
      - "pwd"
      - "docker-compose -f docker-compose.dev.yml build"
  # 빌드 후에 CodeBuild가 실행하는 명령을 나타냅니다(있는 경우). 예를 들어, Maven을 사용하여 빌드 결과물을 JAR 또는 WAR 파일에 패키지할 수 있으며, Amazon ECR에 Docker 이미지를 푸시할 수도 있습니다.
  post_build:
    commands:
      - "docker-compose -f docker-compose.dev.yml push"
# CodeBuild가 빌드 출력을 찾을 수 있는 위치 및 CodeBuild가 Amazon S3 출력 버킷에 업로드하기 위해 빌드 출력을 준비하는 방식에 대한 정보를 나타냅니다.
artifacts:
  # 빌드 환경의 빌드 출력 결과물을 포함하는 위치를 나타냅니다.
  files:
    - "appspec.yml"
    - "scripts/*"
    - "docker-compose.dev.yml"

# version: 0.1
# phases:
# pre_build:
# commands:
# - "echo Logging in to Docker Hub..."
# - 'docker login --username="<YOUR_DOCKERHUB_USERNAME>" --password="<YOUR_DOCKERHUB_PASSWORD>"'
# build:
# commands:
# - "echo Build started on `date`"
# - "echo Building the Docker image..."
# - "docker-compose -f docker-compose.dev.yml build"
# post_build:
# commands:
# - "echo Build completed on `date`"
# - "echo Pushing the Docker image..."
# - "docker-compose -f docker-compose.dev.yml push"
# artifacts:
# files:
# - "appspec.yml"
# - "scripts/*"
# - "docker-compose.dev.yml"